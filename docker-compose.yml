version: "3.9"

services:
  db:
    image: postgres:14.1
    container_name: postgres
    environment:
      POSTGRES_USER: nikenpatel
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: nikenpatel
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5332:5432"  # optional for host access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nikenpatel"]
      interval: 5s
      retries: 10
    networks:
      - backend-network
    restart: unless-stopped

  api:
    build:
      context: ./backend
    container_name: nikenpatel-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/nikenpatel
      SPRING_DATASOURCE_USERNAME: nikenpatel
      SPRING_DATASOURCE_PASSWORD: yourpassword
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8088:8080"
    networks:
      - backend-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend/react
      args:
        api_base_url: http://api:8080
    container_name: nikenpatel-react
    depends_on:
      - api
    ports:
      - "3000:5173"
    networks:
      - backend-network
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge

volumes:
  db-data:
